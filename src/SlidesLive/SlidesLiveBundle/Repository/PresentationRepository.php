<?php

namespace SlidesLive\SlidesLiveBundle\Repository;

use Doctrine\ORM\EntityRepository;
use \SlidesLive\SlidesLiveBundle\Entity\Folder;

/**
 * PresentationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PresentationRepository extends EntityRepository
{    

    public function findFolderPresentations($folderId, $privacyLevel) {
        $em = $this->getEntityManager();
        $query = $em->createQuery("
            SELECT p FROM SlidesLiveBundle:Presentation p
            JOIN p.folder f
            WHERE f.id = :folderId
            AND
            p.privacy <= :privacyLevel
            ORDER BY p.dateRecorded DESC")
        ->setParameters(array(
          'folderId' => sprintf('%s', $folderId),
          'privacyLevel' => $privacyLevel)
        );
        return $query->getResult();
    }
	
	
	// DANGER! There is one special constrain AND a.id != 112 for internalRelease, might be dangerous in the FUTURE (if id's changed!!!
	public function findPublicPresentationsInCategory($categoryId) {
		$privacyLevel = 1;
        $em = $this->getEntityManager();
        $query = $em->createQuery("
            SELECT p FROM SlidesLiveBundle:Presentation p
            INNER JOIN  p.categories c
			LEFT JOIN  p.account a			
            WHERE c.id = :categoryId
			AND p.privacy <= :privacyLevel
			AND a.privacy <= :privacyLevel
			AND a.id != 112					
            ORDER BY p.dateRecorded DESC")
        ->setParameters(array(
          'categoryId' => sprintf('%s', $categoryId),
		  'privacyLevel' => $privacyLevel)
        );

		$recievedPresentations = $query->getResult();
		return $recievedPresentations;
	}	
    
    
}