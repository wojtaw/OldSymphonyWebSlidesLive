# SlidesLive\SlidesLiveBundle\Resources\config\validation.yml

SlidesLive\SlidesLiveBundle\Entity\Account:
  constraints:
    - Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity: { fields: email, message: "This email already exists." }
    - Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity: { fields: username, message: "This username already exists." }
    - Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity: { fields: name, message: "Channel with this name already exists." }
    - Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity: { fields: canonicalName, message: "The channel name, you've entered, is quite similiar to an existing one. Please change the name of your channel." }  

  properties:
    name:
      - NotBlank: { message: "This value should not be blank." }
    username:
      - NotBlank:   { message: This value should not be blank. }
    password:
      - MinLength:  { limit: 6, message: The entered string must be longer then 8 characters. }
    email:
      - NotBlank:   { message: This value should not be blank. }
      - Email:      { message: "This is not a valid email address.", checkMX: true }

    purpose:
      - NotBlank:   { message: This value should not be blank. }
    
SlidesLive\SlidesLiveBundle\Entity\Presentation:
  properties:
    title:
        - NotBlank: { groups: [edit], message: "This value should not be blank." }
        
    description:
        - NotBlank: { groups: [edit], message: "This value should not be blank." }
  
    lang:
      - NotBlank: { groups: [edit], message: "This value should not be blank." }
      
    length:
      - NotBlank: { message: "This value should not be blank." }
#      - Type:     { type: integer, message: "The length value should be a number." }
      
    dateRecorded:
      - NotBlank: { message: "This value should not be blank." }
      
#    service:
#      - NotBlank: { message: "This value should not be blank." }
      
#    service_id:
#      - NotBlank: { message: "This value should not be blank." }
      
#    slides:
#      - Type:     { type: integer, message: "This value should be only 0/1." }
#      - Min:      { limit: 0, message: "This value should be only 0/1." }
#      - Max:      { limit: 1, message: "This value should be only 0/1." }
      
#    video:
#      - Type:     { type: integer, message: "This value should be only 0/1." }
#      - Min:      { limit: 0, message: "This value should be only 0/1." }
#      - Max:      { limit: 1, message: "This value should be only 0/1." }
       
              
      
    
